# lampisite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix://{{ django_dir }}/lampisite.sock; 
}

# configuration of the server
server {
    listen 443 ssl;
    ssl_certificate /etc/ssl/{{ ansible_ec2_public_hostname }}.crt;
    ssl_certificate_key /etc/ssl/{{ ansible_ec2_public_hostname }}.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    server_name {{ ansible_ec2_public_hostname }}; 

    charset     utf-8;
    client_max_body_size 75M;


    location /static {
        alias {{ django_dir }}/static;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     {{ django_dir }}/uwsgi_params; 
    }
}

# MQTT auth server
server {
    # only listen on localhost
    listen 127.0.0.1:8080;
    # only allow connections from localhost 
    #  (overkill since listening on localhost only)
    allow 127.0.0.1/32;
    deny all;

    server_name {{ ansible_ec2_public_hostname }};

    location / {
        uwsgi_pass  django;
        include     {{ django_dir }}/uwsgi_params;
    }

    charset     utf-8;
    client_max_body_size 75M;
}

